[tool.coverage.run]
branch = true
source = [ "src", "tests" ]

[tool.coverage.report]
exclude_lines = [ "if TYPE_CHECKING:" ]
show_missing = true

[tool.poetry]
name = "repo-upgrade"
version = "0.0.0"
description = "Multi-agents Optimization Example"
authors = [
  "Vuong Ngo <agiflow.ai@gmail.com>"
]
license = "MIT"
readme = "README.md"

[[tool.poetry.packages]]
include = "src"

[tool.poetry.dependencies]
python = "<3.13,>=3.10"
python-dotenv = "^1.0.1"
litellm = "^1.32.4"
agiflow-sdk = "0.0.19"
# agiflow-sdk = { path = "../agiflow-sdks/packages/python/agiflow-sdk", develop = true }
html2text = "^2024.2.26"
json5 = "^0.9.25"
beautifulsoup4 = "^4.12.3"
playwright = "^1.45.0"
langgraph = "^0.1.8"
crewai = "^0.36.1"
langchain = "^0.2.12"
langchain-community = "^0.2.11"
langchain-openai = "^0.1.20"
jupyter = "^1.0.0"
langchain-core = "^0.2.23"
# langchain-experimental = "^0.0.64"
# langchain-experimental = { git = "https://github.com/langchain-ai/langchain.git", subdirectory = "libs/experimental"  }

[tool.poetry.group.dev.dependencies]
autopep8 = "2.0.4"
flake8 = "7.1.0"
pytest = "8.0.2"
pytest-sugar = "1.0.0"
pytest-cov = "4.1.0"
pytest-html = "4.1.1"
numexpr = "2.9.0"

[build-system]
requires = [ "poetry-core" ]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
crewai_hierarchical = "src.crewai_hierarchical.main:run"
crewai_sequential = "src.crewai_sequential.main:run"
langgraph = "src.langgraph.main:run"
langgraph_ops = "src.langgraph_ops.main:run"
